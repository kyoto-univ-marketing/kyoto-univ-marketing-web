"use strict";(self.webpackChunkkyoto_univ_marketing_web=self.webpackChunkkyoto_univ_marketing_web||[]).push([[6810],{"./src/components/about/AboutAccordion/Origin/Origin.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var _Default_parameters,_Default_parameters_docs,_Default_parameters1;__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={component:__webpack_require__("./src/components/about/AboutAccordion/Origin/Origin.tsx").$,tags:["autodocs"]},Default={};Default.parameters={...Default.parameters,docs:{...null===(_Default_parameters=Default.parameters)||void 0===_Default_parameters?void 0:_Default_parameters.docs,source:{originalSource:"{}",...null===(_Default_parameters1=Default.parameters)||void 0===_Default_parameters1||null===(_Default_parameters_docs=_Default_parameters1.docs)||void 0===_Default_parameters_docs?void 0:_Default_parameters_docs.source}}};const __namedExportsOrder=["Default"]},"./src/api/client.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>client});const client=(0,__webpack_require__("./node_modules/.pnpm/openapi-fetch@0.10.2/node_modules/openapi-fetch/dist/index.js").Ay)({baseUrl:"https://web-backend-nnxvtvdboa-an.a.run.app/"})},"./src/components/about/AboutAccordion/Origin/Origin.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Origin});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@14.2.4_@babel+core@7.24.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),_api_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/api/client.ts"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const Origin=async param=>{let{...props}=param;const{data}=await _api_client__WEBPACK_IMPORTED_MODULE_1__.S.GET("/api/text/{id}/",{params:{path:{id:"origin"}}});var _data_text;const originText=null!==(_data_text=null==data?void 0:data.text)&&void 0!==_data_text?_data_text:"";return originText||console.error("Couldn't get origin text"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"space-y-8 p-4",children:originText.split("\n").map(((line,i)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:line},i)))})};Origin.__docgenInfo={description:"",methods:[],displayName:"Origin"}},"./node_modules/.pnpm/openapi-fetch@0.10.2/node_modules/openapi-fetch/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>createClient});const DEFAULT_HEADERS={"Content-Type":"application/json"},PATH_PARAM_RE=/\{[^{}]+\}/g;class CustomRequest extends Request{constructor(input,init){super(input,init);for(const key in init)key in this||(this[key]=init[key])}}function createClient(clientOptions){let{baseUrl="",fetch:baseFetch=globalThis.fetch,querySerializer:globalQuerySerializer,bodySerializer:globalBodySerializer,headers:baseHeaders,...baseOptions}={...clientOptions};baseUrl.endsWith("/")&&(baseUrl=baseUrl.substring(0,baseUrl.length-1)),baseHeaders=mergeHeaders(DEFAULT_HEADERS,baseHeaders);const middlewares=[];async function coreFetch(schemaPath,fetchOptions){const{fetch=baseFetch,headers,params={},parseAs="json",querySerializer:requestQuerySerializer,bodySerializer=globalBodySerializer??defaultBodySerializer,...init}=fetchOptions||{};let querySerializer="function"==typeof globalQuerySerializer?globalQuerySerializer:createQuerySerializer(globalQuerySerializer);requestQuerySerializer&&(querySerializer="function"==typeof requestQuerySerializer?requestQuerySerializer:createQuerySerializer({..."object"==typeof globalQuerySerializer?globalQuerySerializer:{},...requestQuerySerializer}));const requestInit={redirect:"follow",...baseOptions,...init,headers:mergeHeaders(baseHeaders,headers,params.header)};let id,options;requestInit.body&&(requestInit.body=bodySerializer(requestInit.body)),requestInit.body instanceof FormData&&requestInit.headers.delete("Content-Type");let request=new CustomRequest(function createFinalURL(pathname,options){let finalURL=`${options.baseUrl}${pathname}`;options.params?.path&&(finalURL=function defaultPathSerializer(pathname,pathParams){let nextURL=pathname;for(const match of pathname.match(PATH_PARAM_RE)??[]){let name=match.substring(1,match.length-1),explode=!1,style="simple";if(name.endsWith("*")&&(explode=!0,name=name.substring(0,name.length-1)),name.startsWith(".")?(style="label",name=name.substring(1)):name.startsWith(";")&&(style="matrix",name=name.substring(1)),!pathParams||void 0===pathParams[name]||null===pathParams[name])continue;const value=pathParams[name];Array.isArray(value)?nextURL=nextURL.replace(match,serializeArrayParam(name,value,{style,explode})):nextURL="object"!=typeof value?"matrix"!==style?nextURL.replace(match,"label"===style?`.${encodeURIComponent(value)}`:encodeURIComponent(value)):nextURL.replace(match,`;${serializePrimitiveParam(name,value)}`):nextURL.replace(match,serializeObjectParam(name,value,{style,explode}))}return nextURL}(finalURL,options.params.path));let search=options.querySerializer(options.params.query??{});search.startsWith("?")&&(search=search.substring(1));search&&(finalURL+=`?${search}`);return finalURL}(schemaPath,{baseUrl,params,querySerializer}),requestInit);if(middlewares.length){id=function randomID(){return Math.random().toString(36).slice(2,11)}(),options=Object.freeze({baseUrl,fetch,parseAs,querySerializer,bodySerializer});for(const m of middlewares)if(m&&"object"==typeof m&&"function"==typeof m.onRequest){const result=await m.onRequest({request,schemaPath,params,options,id});if(result){if(!(result instanceof Request))throw new Error("onRequest: must return new Request() when modifying the request");request=result}}}let response=await fetch(request);if(middlewares.length)for(let i=middlewares.length-1;i>=0;i--){const m=middlewares[i];if(m&&"object"==typeof m&&"function"==typeof m.onResponse){const result=await m.onResponse({request,response,schemaPath,params,options,id});if(result){if(!(result instanceof Response))throw new Error("onResponse: must return new Response() when modifying the response");response=result}}}if(204===response.status||"0"===response.headers.get("Content-Length"))return response.ok?{data:{},response}:{error:{},response};if(response.ok)return"stream"===parseAs?{data:response.body,response}:{data:await response[parseAs](),response};let error=await response.text();try{error=JSON.parse(error)}catch{}return{error,response}}return{GET:async(url,init)=>coreFetch(url,{...init,method:"GET"}),PUT:async(url,init)=>coreFetch(url,{...init,method:"PUT"}),POST:async(url,init)=>coreFetch(url,{...init,method:"POST"}),DELETE:async(url,init)=>coreFetch(url,{...init,method:"DELETE"}),OPTIONS:async(url,init)=>coreFetch(url,{...init,method:"OPTIONS"}),HEAD:async(url,init)=>coreFetch(url,{...init,method:"HEAD"}),PATCH:async(url,init)=>coreFetch(url,{...init,method:"PATCH"}),TRACE:async(url,init)=>coreFetch(url,{...init,method:"TRACE"}),use(...middleware){for(const m of middleware)if(m){if("object"!=typeof m||!("onRequest"in m)&&!("onResponse"in m))throw new Error("Middleware must be an object with one of `onRequest()` or `onResponse()`");middlewares.push(m)}},eject(...middleware){for(const m of middleware){const i=middlewares.indexOf(m);-1!==i&&middlewares.splice(i,1)}}}}function serializePrimitiveParam(name,value,options){if(null==value)return"";if("object"==typeof value)throw new Error("Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.");return`${name}=${!0===options?.allowReserved?value:encodeURIComponent(value)}`}function serializeObjectParam(name,value,options){if(!value||"object"!=typeof value)return"";const values=[],joiner={simple:",",label:".",matrix:";"}[options.style]||"&";if("deepObject"!==options.style&&!1===options.explode){for(const k in value)values.push(k,!0===options.allowReserved?value[k]:encodeURIComponent(value[k]));const final=values.join(",");switch(options.style){case"form":return`${name}=${final}`;case"label":return`.${final}`;case"matrix":return`;${name}=${final}`;default:return final}}for(const k in value){const finalName="deepObject"===options.style?`${name}[${k}]`:k;values.push(serializePrimitiveParam(finalName,value[k],options))}const final=values.join(joiner);return"label"===options.style||"matrix"===options.style?`${joiner}${final}`:final}function serializeArrayParam(name,value,options){if(!Array.isArray(value))return"";if(!1===options.explode){const joiner={form:",",spaceDelimited:"%20",pipeDelimited:"|"}[options.style]||",",final=(!0===options.allowReserved?value:value.map((v=>encodeURIComponent(v)))).join(joiner);switch(options.style){case"simple":return final;case"label":return`.${final}`;case"matrix":return`;${name}=${final}`;default:return`${name}=${final}`}}const joiner={simple:",",label:".",matrix:";"}[options.style]||"&",values=[];for(const v of value)"simple"===options.style||"label"===options.style?values.push(!0===options.allowReserved?v:encodeURIComponent(v)):values.push(serializePrimitiveParam(name,v,options));return"label"===options.style||"matrix"===options.style?`${joiner}${values.join(joiner)}`:values.join(joiner)}function createQuerySerializer(options){return function querySerializer(queryParams){const search=[];if(queryParams&&"object"==typeof queryParams)for(const name in queryParams){const value=queryParams[name];null!=value&&(Array.isArray(value)?search.push(serializeArrayParam(name,value,{style:"form",explode:!0,...options?.array,allowReserved:options?.allowReserved||!1})):"object"!=typeof value?search.push(serializePrimitiveParam(name,value,options)):search.push(serializeObjectParam(name,value,{style:"deepObject",explode:!0,...options?.object,allowReserved:options?.allowReserved||!1})))}return search.join("&")}}function defaultBodySerializer(body){return JSON.stringify(body)}function mergeHeaders(...allHeaders){const finalHeaders=new Headers;for(const h of allHeaders){if(!h||"object"!=typeof h)continue;const iterator=h instanceof Headers?h.entries():Object.entries(h);for(const[k,v]of iterator)if(null===v)finalHeaders.delete(k);else if(Array.isArray(v))for(const v2 of v)finalHeaders.append(k,v2);else void 0!==v&&finalHeaders.set(k,v)}return finalHeaders}}}]);